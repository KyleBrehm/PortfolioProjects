Select *
From PortfolioProject1..CovidDeaths
order by 3,4

Select *
From PortfolioProject1..CovidVaccinations
order by 3,4

-- Select Data we are using

Select location, date, total_cases, new_cases, total_deaths, population
From PortfolioProject1..CovidDeaths
order by 1,2

--Looking at total cases vs total deaths

Alter Table CovidDeaths
Alter Column total_deaths decimal;

Alter Table CovidDeaths
Alter Column total_cases decimal;

--Shows percentage of people dying who contracted covid in given country

Select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From PortfolioProject1..CovidDeaths
Where location = 'United States'
order by 1,2

--Looking at Total Cases vs Population
--Shows what percentage of population got covid in given country
Select location, date,population, total_cases, (total_cases/population)*100 as InfectionRate
From PortfolioProject1..CovidDeaths
Where location = 'United States'
order by 1,2

--Countries with highest infection rate compared to population
Select location ,population, Max(total_cases) as HighestInfectionCount, Max((total_cases/population))*100 as PercentPopulationInfected
From PortfolioProject1..CovidDeaths
group by location, population
order by PercentPopulationInfected desc

--Shows countries with highest death count per population

Select location ,population, Max(total_cases) as TotalDeathCount
From PortfolioProject1..CovidDeaths
Where Continent is not null
group by location, population
order by TotalDeathCount desc

--Vaccination info, looking at total population vs vaccinations
--USE CTE

With PopvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
as(
Select deaths.continent, deaths.location, deaths.date, deaths.population, vacs.new_vaccinations,
SUM(cast(vacs.new_vaccinations as decimal)) OVER (Partition by deaths.location Order by deaths.location, deaths.date) as RollingPeopleVaccinated
From PortfolioProject1..CovidDeaths as deaths
Join PortfolioProject1..CovidVaccinations as vacs
	on deaths.location = vacs.location
	and deaths.date = vacs.date
Where deaths.continent is not null
--order by 2,3
)
Select *, (RollingPeopleVaccinated/population)*100 as PercentageVaccinated
From PopvsVac


--Temp Table

Drop Table if exists #PercentPopulationVaccinated
Create table #PercentPopulationVaccinated
(
continent nvarchar(255),
location nvarchar(255),
date datetime,
population numeric,
new_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select deaths.continent, deaths.location, deaths.date, deaths.population, vacs.new_vaccinations,
SUM(cast(vacs.new_vaccinations as decimal)) OVER (Partition by deaths.location Order by deaths.location, deaths.date) as RollingPeopleVaccinated
--,(RollingPeopleVaccinated/population)*100
From PortfolioProject1..CovidDeaths as deaths
Join PortfolioProject1..CovidVaccinations as vacs
	on deaths.location = vacs.location
	and deaths.date = vacs.date
Where deaths.continent is not null
--order by 2,3

Select *, (RollingPeopleVaccinated/population)*100 as PercentageVaccinated
From #PercentPopulationVaccinated

--Creating view for Tableau later

Create view PercentPopulationVaccinated as
Select deaths.continent, deaths.location, deaths.date, deaths.population, vacs.new_vaccinations,
SUM(cast(vacs.new_vaccinations as decimal)) OVER (Partition by deaths.location Order by deaths.location, deaths.date) as RollingPeopleVaccinated
--,(RollingPeopleVaccinated/population)*100
From PortfolioProject1..CovidDeaths as deaths
Join PortfolioProject1..CovidVaccinations as vacs
	on deaths.location = vacs.location
	and deaths.date = vacs.date
Where deaths.continent is not null
--order by 2,3

Select *
From PercentPopulationVaccinated
